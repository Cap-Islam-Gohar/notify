## Autogenerated by Scribe. DO NOT MODIFY.

name: Todos
description: |-

  APIs for managing todos.
endpoints:
  -
    custom: []
    httpMethods:
      - GET
    uri: api/todos
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'List todos'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/todos
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a todo'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        custom: []
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      description:
        custom: []
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        deprecated: false
    cleanBodyParameters:
      title: b
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: 'api/todos/{id}'
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a todo'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/todos/{id}'
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a todo'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        custom: []
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
      description:
        custom: []
        name: description
        description: ''
        required: false
        example: 'Eius et animi quos velit et.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        deprecated: false
    cleanBodyParameters:
      title: b
      description: 'Eius et animi quos velit et.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/todos/{id}'
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a todo'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'The ID of the todo.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/todos/complete
    metadata:
      custom: []
      groupName: Todos
      groupDescription: |-

        APIs for managing todos.
      subgroup: ''
      subgroupDescription: ''
      title: 'Mark a todo as completed'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer YOUR_AUTH_KEY'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
